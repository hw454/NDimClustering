% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/km_nan.R
\name{km_nan}
\alias{km_nan}
\title{Apply kmeans clustering ignoring NaN terms}
\usage{
km_nan(
  b_mat,
  p_mat,
  nclust = 5,
  iter_max = 300,
  clust_threshold = 1e-05,
  bin_p_clust = TRUE,
  how_cents = "point"
)
}
\arguments{
\item{b_mat}{Matrix of the data, each row is a snp and the columns
are the traits.}

\item{p_mat}{matrix of p-values corresponding to the scores in b_mat}

\item{nclust}{The number of clusters to allocate. default\:5}

\item{iter_max}{The maximum number of iterations to reach cluster
convergence. default\:300}

\item{clust_threshold}{The threshold for how close cluster
centres need to be to be considered converged. default\:1e-5}

\item{bin_p_clust}{Bool to indicate whether cluster probability is to be
assign. default\:TRUE}

\item{how_cents}{How the centroids will be initialised. If "rand (default)"
then the coordinates are created using a uniform distribution on the range
of each axis. If "points" then the centroid coordinates are assign to
nclust random points from the dataspace.}
}
\value{
clust_out
}
\description{
Use common axes for distance calculations to igore NaNs and
retain data.
}
\details{
The cluster centres are randomly assigned using [make_rand_cent].
The cluster centres are check and reassigned using [check_clust_cent],
When the clusters are converged or the maximum number of iterations are
used then the clusters are return in the dataframe "cluster_df".
"clust_out" is the list containing the "clusters_df" dataframe
labelled "cluster" of the cluster membership with columns\:
  * "clust_num" the number of clusters
  * "clust_dist" the distance from the snp to the cluster centre
  (or distance between angles)
  * "clust_prob" probability the snp is in the cluster. Calculated
  using [calc_clust_prob].
"clust_out" also contains the "centroids_df" dataframe labelled "centres"
whose columns are the traits and rows are the cluster numbers. Additional
column "thresh_check" contains Bool indicating whether that cluster
converged.
}
\seealso{
Other k_means: 
\code{\link{cluster_kmeans_min}()},
\code{\link{cluster_kmeans}()},
\code{\link{make_rand_cent}()}

Other clustering_components: 
\code{\link{calc_clust_cent}()},
\code{\link{calc_clust_prob}()},
\code{\link{calc_member_dist_cent}()},
\code{\link{check_clust_cent}()},
\code{\link{convert_mat_to_angle_mat}()},
\code{\link{get_aic}()},
\code{\link{make_clust_col_name}()},
\code{\link{make_clust_col}()},
\code{\link{make_rand_cent}()}

Other cluster_functions: 
\code{\link{cluster_dbscan}()},
\code{\link{cluster_kmeans_min}()},
\code{\link{cluster_kmeans}()},
\code{\link{get_aic}()}
}
\concept{cluster_functions}
\concept{clustering_components}
\concept{k_means}
